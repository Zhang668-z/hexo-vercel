<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/26/hello-world/"/>
    <url>/2021/12/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/07/20/mapStruct%E7%AE%80%E4%BB%8B/"/>
    <url>/2021/07/20/mapStruct%E7%AE%80%E4%BB%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="1、mapStruct简介"><a href="#1、mapStruct简介" class="headerlink" title="1、mapStruct简介"></a>1、mapStruct简介</h3><ul><li>官网：<a href="https://mapstruct.org/">MapStruct – Java bean mappings, the easy way!</a></li><li>中文文档：<a href="http://www.kailing.pub/MapStruct1.3/index.html">MapStruct 1.3.0.Final参考指南 (kailing.pub)</a></li><li>使用场景：</li></ul><p><img src="https://pic-markdown.oss-cn-beijing.aliyuncs.com/Java%E7%AC%94%E8%AE%B0/img/20210620163904.png" alt="image-20210620163904556"></p><h3 id="2、BeansUtils和MapStruct的对比"><a href="#2、BeansUtils和MapStruct的对比" class="headerlink" title="2、BeansUtils和MapStruct的对比"></a>2、BeansUtils和MapStruct的对比</h3><h4 id="2-1-相同之处"><a href="#2-1-相同之处" class="headerlink" title="2.1 相同之处"></a>2.1 相同之处</h4><ul><li>拷贝简单对象的时候都是深拷贝</li><li>拷贝复杂对象的时候都是浅拷贝</li></ul><blockquote><p>复杂对象：类中属性包括对象属性的类为复杂对象</p></blockquote><blockquote><p>深拷贝：是增加了一个指针并且申请了一个新的内存，使这个增加的指针指向这个新的内存</p><p>浅拷贝：只是增加了一个指针指向已存在的内存地址</p></blockquote><h4 id="2-2-不同之处"><a href="#2-2-不同之处" class="headerlink" title="2.2 不同之处"></a>2.2 不同之处</h4><ul><li>BeanUtils在java虚拟机运行期间通过反射实现，效率低下</li><li>BeanUtils的属性拷贝在判断空值和不同类型的属性时有很多障碍 产生Bug</li><li>MapStruct基于JSR269 API实现，在代码编译期间通过getter/setter来实现 对代码运行效率没有性能上的损耗 </li><li>MapStruct有非常灵活的策略和转化方式，自定义性比较强。</li><li>MapStruct支持不同的source和target基本类型自动转换，包括在超类型上声明的属性</li><li>支持lombok中的model的builder链式调用 应用到ConverterImpl中</li></ul><blockquote><p>JSR269：插入式注解处理API 是用于处理注解（元数据，<a href="https://www.jcp.org/en/jsr/detail?id=269">JSR175</a>）的一套API。其API位于<code>javax.annotation.processing</code>和<code>javax.lang.model</code>包下。</p><p>插入式注解处理API可以让你在编译期访问注解元数据，处理和自定义你的编译输出，像反射一样访问类、字段、方法和注解等元素，创建新的源文件等等。可用于减少编写配置文件的劳动量，提高代码可读性等等。</p></blockquote><h3 id="3-MapStruct的简单使用"><a href="#3-MapStruct的简单使用" class="headerlink" title="3. MapStruct的简单使用"></a>3. MapStruct的简单使用</h3><h4 id="3-1-依赖"><a href="#3-1-依赖" class="headerlink" title="3.1 依赖"></a>3.1 依赖</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs xml">...<br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">org.mapstruct.version</span>&gt;</span>1.4.2.Final<span class="hljs-tag">&lt;/<span class="hljs-name">org.mapstruct.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mapstruct<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mapstruct<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>$&#123;org.mapstruct.version&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br>...<br><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">pluginManagement</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>3.8.1<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>          <span class="hljs-tag">&lt;<span class="hljs-name">configuration</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">source</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">source</span>&gt;</span> <span class="hljs-comment">&lt;!-- depending on your project --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">target</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">target</span>&gt;</span> <span class="hljs-comment">&lt;!-- depending on your project --&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">annotationProcessorPaths</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">path</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mapstruct<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mapstruct-processor<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.4.2.Final<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>              <span class="hljs-tag">&lt;<span class="hljs-name">path</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br>                  <span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>1.18.12<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br>              <span class="hljs-tag">&lt;/<span class="hljs-name">path</span>&gt;</span><br>              <span class="hljs-comment">&lt;!-- other annotation processors --&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">annotationProcessorPaths</span>&gt;</span><br>          <span class="hljs-tag">&lt;/<span class="hljs-name">configuration</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br>      <span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">pluginManagement</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span>    <br></code></pre></td></tr></table></figure><h3 id="4-MapStruct自定义配置"><a href="#4-MapStruct自定义配置" class="headerlink" title="4. MapStruct自定义配置"></a>4. MapStruct自定义配置</h3><h4 id="4-1-定义映射"><a href="#4-1-定义映射" class="headerlink" title="4.1 定义映射"></a>4.1 定义映射</h4><h5 id="4-1-1-基本映射"><a href="#4-1-1-基本映射" class="headerlink" title="4.1.1 基本映射"></a>4.1.1 基本映射</h5><p>属性名不同时 指定source和target进行映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(source = &quot;make&quot;, target = &quot;manufacturer&quot;)</span><br>    <span class="hljs-meta">@Mapping(source = &quot;numberOfSeats&quot;, target = &quot;seatCount&quot;)</span><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br><br>    <span class="hljs-meta">@Mapping(source = &quot;name&quot;, target = &quot;fullName&quot;)</span><br>    <span class="hljs-function">PersonDto <span class="hljs-title">personToPersonDto</span><span class="hljs-params">(Person person)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-2-添加自定义方法"><a href="#4-1-2-添加自定义方法" class="headerlink" title="4.1.2 添加自定义方法"></a>4.1.2 添加自定义方法</h5><p>需要手动实现的特定映射 由MapStruct自动调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(...)</span><br>    ...<br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">default</span> PersonDto <span class="hljs-title">personToPersonDto</span><span class="hljs-params">(Person person)</span> </span>&#123;<br>        <span class="hljs-comment">//hand-written mapping logic</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-3-多个数据源的映射"><a href="#4-1-3-多个数据源的映射" class="headerlink" title="4.1.3 多个数据源的映射"></a>4.1.3 多个数据源的映射</h5><p>将多个实体组合成一个数据传输对象</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">AddressMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(source = &quot;person.description&quot;, target = &quot;description&quot;)</span><br>    <span class="hljs-meta">@Mapping(source = &quot;address.houseNo&quot;, target = &quot;houseNumber&quot;)</span><br>    <span class="hljs-function">DeliveryAddressDto <span class="hljs-title">personAndAddressToDeliveryAddressDto</span><span class="hljs-params">(Person person, Address address)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-4-更新现有的实体"><a href="#4-1-4-更新现有的实体" class="headerlink" title="4.1.4 更新现有的实体"></a>4.1.4 更新现有的实体</h5><p>使用@MappingTarget</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">updateCarFromDto</span><span class="hljs-params">(CarDto carDto, <span class="hljs-meta">@MappingTarget</span> Car car)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-1-5-使用构建器"><a href="#4-1-5-使用构建器" class="headerlink" title="4.1.5 使用构建器"></a>4.1.5 使用构建器</h5><p>可结合lombok的@Builder构建</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PersonMapperImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">PersonMapper</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Person <span class="hljs-title">map</span><span class="hljs-params">(PersonDto dto)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (dto == <span class="hljs-keyword">null</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125;<br><br>        Person.Builder builder = Person.builder();<br><br>        builder.name( dto.getName() );<br><br>        <span class="hljs-keyword">return</span> builder.create();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-2-检索映射器"><a href="#4-2-检索映射器" class="headerlink" title="4.2 检索映射器"></a>4.2 检索映射器</h4><h5 id="4-2-1-使用Mappers工厂"><a href="#4-2-1-使用Mappers工厂" class="headerlink" title="4.2.1 使用Mappers工厂"></a>4.2.1 使用Mappers工厂</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">CarMapper INSTANCE = Mappers.getMapper( CarMapper.class );<br></code></pre></td></tr></table></figure><h5 id="4-2-2-使用依赖注入"><a href="#4-2-2-使用依赖注入" class="headerlink" title="4.2.2 使用依赖注入"></a>4.2.2 使用依赖注入</h5><p>Spring</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper(componentModel = &quot;spring&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">...<br><span class="hljs-meta">@Autowired</span> <br><span class="hljs-keyword">private</span> CarMapper mapper;<br>...<br></code></pre></td></tr></table></figure><h4 id="4-3-数据类型转换"><a href="#4-3-数据类型转换" class="headerlink" title="4.3 数据类型转换"></a>4.3 数据类型转换</h4><h5 id="4-3-1隐式类型转换"><a href="#4-3-1隐式类型转换" class="headerlink" title="4.3.1隐式类型转换"></a>4.3.1隐式类型转换</h5><p>对于大多数基本类型或者包装类型之间的互转 MapStruct会自动处理类型转换</p><p>再转换时也可以通过@Mapper中的属性指定格式化</p><p>示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(source = &quot;price&quot;, numberFormat = &quot;#.00&quot;)</span><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br><br>    <span class="hljs-meta">@IterableMapping(numberFormat = &quot;#.00&quot;)</span><br>    <span class="hljs-function">List&lt;String&gt; <span class="hljs-title">prices</span><span class="hljs-params">(List&lt;Integer&gt; prices)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-3-2映射对象引用"><a href="#4-3-2映射对象引用" class="headerlink" title="4.3.2映射对象引用"></a>4.3.2映射对象引用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br><br>    <span class="hljs-function">PersonDto <span class="hljs-title">personToPersonDto</span><span class="hljs-params">(Person person)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-4-映射集合"><a href="#4-4-映射集合" class="headerlink" title="4.4 映射集合"></a>4.4 映射集合</h4><h5 id="4-4-1-Collection类型"><a href="#4-4-1-Collection类型" class="headerlink" title="4.4.1 Collection类型"></a>4.4.1 Collection类型</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-function">Set&lt;String&gt; <span class="hljs-title">integerSetToStringSet</span><span class="hljs-params">(Set&lt;Integer&gt; integers)</span></span>;<br><br>    <span class="hljs-function">List&lt;CarDto&gt; <span class="hljs-title">carsToCarDtos</span><span class="hljs-params">(List&lt;Car&gt; cars)</span></span>;<br><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-4-2-Map类型"><a href="#4-4-2-Map类型" class="headerlink" title="4.4.2 Map类型"></a>4.4.2 Map类型</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">SourceTargetMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@MapMapping(valueDateFormat = &quot;dd.MM.yyyy&quot;)</span><br>    <span class="hljs-function">Map&lt;String, String&gt; <span class="hljs-title">longDateMapToStringStringMap</span><span class="hljs-params">(Map&lt;Long, Date&gt; source)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Impl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Map&lt;Long, Date&gt; <span class="hljs-title">stringStringMapToLongDateMap</span><span class="hljs-params">(Map&lt;String, String&gt; source)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> ( source == <span class="hljs-keyword">null</span> ) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br><br>    Map&lt;Long, Date&gt; map = <span class="hljs-keyword">new</span> HashMap&lt;Long, Date&gt;();<br><br>    <span class="hljs-keyword">for</span> ( Map.Entry&lt;String, String&gt; entry : source.entrySet() ) &#123;<br><br>        Long key = Long.parseLong( entry.getKey() );<br>        Date value;<br>        <span class="hljs-keyword">try</span> &#123;<br>            value = <span class="hljs-keyword">new</span> SimpleDateFormat( <span class="hljs-string">&quot;dd.MM.yyyy&quot;</span> ).parse( entry.getValue() );<br>        &#125;<br>        <span class="hljs-keyword">catch</span>( ParseException e ) &#123;<br>            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> RuntimeException( e );<br>        &#125;<br><br>        map.put( key, value );<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> map;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-5-映射Stream"><a href="#4-5-映射Stream" class="headerlink" title="4.5 映射Stream"></a>4.5 映射Stream</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-function">Set&lt;String&gt; <span class="hljs-title">integerStreamToStringSet</span><span class="hljs-params">(Stream&lt;Integer&gt; integers)</span></span>;<br><br>    <span class="hljs-function">List&lt;CarDto&gt; <span class="hljs-title">carsToCarDtos</span><span class="hljs-params">(Stream&lt;Car&gt; cars)</span></span>;<br><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToCarDto</span><span class="hljs-params">(Car car)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>Impl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> Set&lt;String&gt; <span class="hljs-title">integerStreamToStringSet</span><span class="hljs-params">(Stream&lt;Integer&gt; integers)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> ( integers == <span class="hljs-keyword">null</span> ) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> integers.stream().map( integer -&gt; String.valueOf( integer ) )<br>        .collect( Collectors.toCollection( HashSet&lt;String&gt;::<span class="hljs-keyword">new</span> ) );<br>&#125;<br><br><span class="hljs-meta">@Override</span><br><span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;CarDto&gt; <span class="hljs-title">carsToCarDtos</span><span class="hljs-params">(Stream&lt;Car&gt; cars)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> ( cars == <span class="hljs-keyword">null</span> ) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> integers.stream().map( car -&gt; carToCarDto( car ) )<br>        .collect( Collectors.toCollection( ArrayList&lt;CarDto&gt;::<span class="hljs-keyword">new</span> ) );<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-6-映射配置重用"><a href="#4-6-映射配置重用" class="headerlink" title="4.6 映射配置重用"></a>4.6 映射配置重用</h4><h5 id="4-6-1-映射配置继承"><a href="#4-6-1-映射配置继承" class="headerlink" title="4.6.1 映射配置继承"></a>4.6.1 映射配置继承</h5><p>@InheritConfiguration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(target = &quot;numberOfSeats&quot;, source = &quot;seatCount&quot;)</span><br>    <span class="hljs-function">Car <span class="hljs-title">carDtoToCar</span><span class="hljs-params">(CarDto car)</span></span>;<br><br>    <span class="hljs-meta">@InheritConfiguration</span><br>    <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">carDtoIntoCar</span><span class="hljs-params">(CarDto carDto, <span class="hljs-meta">@MappingTarget</span> Car car)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h5 id="4-6-2-逆映射"><a href="#4-6-2-逆映射" class="headerlink" title="4.6.2 逆映射"></a>4.6.2 逆映射</h5><p>@InheritInverseConfiguration</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">CarMapper</span> </span>&#123;<br><br>    <span class="hljs-meta">@Mapping(source = &quot;numberOfSeats&quot;, target = &quot;seatCount&quot;)</span><br>    <span class="hljs-function">CarDto <span class="hljs-title">carToDto</span><span class="hljs-params">(Car car)</span></span>;<br><br>    <span class="hljs-meta">@InheritInverseConfiguration</span><br>    <span class="hljs-meta">@Mapping(target = &quot;numberOfSeats&quot;, ignore = true)</span><br>    <span class="hljs-function">Car <span class="hljs-title">carDtoToCar</span><span class="hljs-params">(CarDto carDto)</span></span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="4-7Demo"><a href="#4-7Demo" class="headerlink" title="4.7Demo"></a>4.7Demo</h4><p>Model</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> Long id;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password; <span class="hljs-comment">// 密码</span><br>    <span class="hljs-keyword">private</span> Integer sex;  <span class="hljs-comment">// 性别</span><br>    <span class="hljs-keyword">private</span> LocalDate birthday; <span class="hljs-comment">// 生日</span><br>    <span class="hljs-keyword">private</span> LocalDateTime createTime; <span class="hljs-comment">// 创建时间</span><br>    <span class="hljs-keyword">private</span> String config; <span class="hljs-comment">// 其他扩展信息，以JSON格式存储</span><br>&#125;<br></code></pre></td></tr></table></figure><p>DTO</p><ul><li>不显示密码；</li><li>将日期转换；</li><li>config要转成对象的list；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-meta">@Builder</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserVo</span> </span>&#123;<br>    <span class="hljs-keyword">private</span> Long id;<br>    <span class="hljs-keyword">private</span> String username;<br>    <span class="hljs-keyword">private</span> String password;<br>    <span class="hljs-keyword">private</span> Integer gender;<br>    <span class="hljs-keyword">private</span> LocalDate birthday;<br>    <span class="hljs-keyword">private</span> String createTime;<br>    <span class="hljs-keyword">private</span> List&lt;UserConfig&gt; config;<br>    <span class="hljs-meta">@Data</span><br>    <span class="hljs-meta">@Builder</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserConfig</span> </span>&#123;<br>        <span class="hljs-keyword">private</span> String field1;<br>        <span class="hljs-keyword">private</span> Integer field2;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>Converter</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">interface</span> <span class="hljs-title">UserConverter</span> </span>&#123;<br>    UserConverter INSTANCE = Mappers.getMapper(UserConverter.class);<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">      * sex字段映射到gender字段</span><br><span class="hljs-comment">      * createTime字段格式化</span><br><span class="hljs-comment">      */</span><br>    <span class="hljs-meta">@Mapping(target = &quot;gender&quot;, source = &quot;sex&quot;)</span><br>    <span class="hljs-meta">@Mapping(target = &quot;createTime&quot;, dateFormat = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br>    <span class="hljs-function">UserVo <span class="hljs-title">toVo</span><span class="hljs-params">(User var1)</span></span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * gender字段映射到sex字段</span><br><span class="hljs-comment">     * createTime字段格式化</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-meta">@Mapping(target = &quot;sex&quot;, source = &quot;gender&quot;)</span><br>    <span class="hljs-comment">//@InheritInverseConfiguration</span><br>    <span class="hljs-meta">@Mapping(target = &quot;password&quot;, ignore = true)</span><br>    <span class="hljs-meta">@Mapping(target = &quot;createTime&quot;, dateFormat = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br>    <span class="hljs-function">User <span class="hljs-title">toModel</span><span class="hljs-params">(UserVo var1)</span></span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">      * 集合映射</span><br><span class="hljs-comment">      */</span><br>    <span class="hljs-function">List&lt;UserVo&gt; <span class="hljs-title">toVoList</span><span class="hljs-params">(List&lt;User&gt; userList)</span></span>;<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">      * config字段自定义映射</span><br><span class="hljs-comment">      */</span><br>    <span class="hljs-keyword">default</span> List&lt;UserVo.UserConfig&gt; strConfigToListUserConfig(String config) &#123;<br>        <span class="hljs-keyword">return</span> JSON.parseArray(config, UserVo.UserConfig.class);<br>    &#125;<br>    <br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">      * UserConfig对象集合自定义集合</span><br><span class="hljs-comment">      */</span><br>    <span class="hljs-function"><span class="hljs-keyword">default</span> String <span class="hljs-title">listUserConfigToStrConfig</span><span class="hljs-params">(List&lt;UserVo.UserConfig&gt; list)</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> JSON.toJSONString(list);<br>    &#125;<br>    <br>&#125;<br></code></pre></td></tr></table></figure><p>ConverterImpl</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Generated(</span><br><span class="hljs-meta">    value = &quot;org.mapstruct.ap.MappingProcessor&quot;,</span><br><span class="hljs-meta">    date = &quot;2021-07-11T15:07:54+0800&quot;,</span><br><span class="hljs-meta">    comments = &quot;version: 1.4.2.Final, compiler: javac, environment: Java 1.8.0_171 (Oracle Corporation)&quot;</span><br><span class="hljs-meta">)</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">UserConverterImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">UserConverter</span> </span>&#123;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> UserVo <span class="hljs-title">toVo</span><span class="hljs-params">(User var1)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> ( var1 == <span class="hljs-keyword">null</span> ) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125;<br><br>        UserVoBuilder userVo = UserVo.builder();<br><br>        userVo.gender( var1.getSex() );<br>        <span class="hljs-keyword">if</span> ( var1.getCreateTime() != <span class="hljs-keyword">null</span> ) &#123;<br>            userVo.createTime( DateTimeFormatter.ofPattern( <span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span> ).format( var1.getCreateTime() ) );<br>        &#125;<br>        userVo.id( var1.getId() );<br>        userVo.username( var1.getUsername() );<br>        userVo.password( var1.getPassword() );<br>        userVo.birthday( var1.getBirthday() );<br>        userVo.config( strConfigToListUserConfig( var1.getConfig() ) );<br><br>        <span class="hljs-keyword">return</span> userVo.build();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> User <span class="hljs-title">toModel</span><span class="hljs-params">(UserVo var1)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> ( var1 == <span class="hljs-keyword">null</span> ) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125;<br><br>        UserBuilder user = User.builder();<br><br>        user.sex( var1.getGender() );<br>        <span class="hljs-keyword">if</span> ( var1.getCreateTime() != <span class="hljs-keyword">null</span> ) &#123;<br>            user.createTime( LocalDateTime.parse( var1.getCreateTime(), DateTimeFormatter.ofPattern( <span class="hljs-string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span> ) ) );<br>        &#125;<br>        user.id( var1.getId() );<br>        user.username( var1.getUsername() );<br>        user.birthday( var1.getBirthday() );<br>        user.config( listUserConfigToStrConfig( var1.getConfig() ) );<br><br>        <span class="hljs-keyword">return</span> user.build();<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> List&lt;UserVo&gt; <span class="hljs-title">toVoList</span><span class="hljs-params">(List&lt;User&gt; userList)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> ( userList == <span class="hljs-keyword">null</span> ) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>        &#125;<br><br>        List&lt;UserVo&gt; list = <span class="hljs-keyword">new</span> ArrayList&lt;UserVo&gt;( userList.size() );<br>        <span class="hljs-keyword">for</span> ( User user : userList ) &#123;<br>            list.add( toVo( user ) );<br>        &#125;<br><br>        <span class="hljs-keyword">return</span> list;<br>    &#125;<br></code></pre></td></tr></table></figure><p>Test</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">AppTest</span> </span>&#123;<br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">toVoTest</span><span class="hljs-params">()</span> </span>&#123;<br>        User user = User.builder()<br>                .id(<span class="hljs-number">1L</span>)<br>                .username(<span class="hljs-string">&quot;zhangsan&quot;</span>)<br>                .sex(<span class="hljs-number">1</span>)<br>                .password(<span class="hljs-string">&quot;abc123&quot;</span>)<br>                .createTime(LocalDateTime.now())<br>                .birthday(LocalDate.of(<span class="hljs-number">1999</span>, <span class="hljs-number">9</span>, <span class="hljs-number">27</span>))<br>                .config(<span class="hljs-string">&quot;[&#123;\&quot;field1\&quot;:\&quot;Test Field1\&quot;,\&quot;field2\&quot;:500&#125;,&#123;\&quot;field1\&quot;:\&quot;Test Field2\&quot;,\&quot;field2\&quot;:1000&#125;]&quot;</span>)<br>                .build();<br>        UserVo userVo = UserConverter.INSTANCE.toVo(user);<br><br>        System.out.println(user);<br>        System.out.println(userVo);<br><br><span class="hljs-comment">//        User(id=1, username=zhangsan, password=abc123, sex=1, birthday=1999-09-27, createTime=2021-07-11T15:09:47.485, config=[&#123;&quot;field1&quot;:&quot;Test Field1&quot;,&quot;field2&quot;:500&#125;,&#123;&quot;field1&quot;:&quot;Test Field2&quot;,&quot;field2&quot;:1000&#125;])</span><br><span class="hljs-comment">//        UserVo(id=1, username=zhangsan, password=abc123, gender=1, birthday=1999-09-27, createTime=2021-07-11 15:09:47, config=[UserVo.UserConfig(field1=Test Field1, field2=500), UserVo.UserConfig(field1=Test Field2, field2=1000)])</span><br><br>    &#125;<br><br>    <span class="hljs-meta">@Test</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">toModelTest</span><span class="hljs-params">()</span> </span>&#123;<br>        ArrayList&lt;UserVo.UserConfig&gt; configs = <span class="hljs-keyword">new</span> ArrayList&lt;&gt;();<br>        configs.add(UserVo.UserConfig.builder().field1(<span class="hljs-string">&quot;Test Field1&quot;</span>).field2(<span class="hljs-number">500</span>).build());<br>        configs.add(UserVo.UserConfig.builder().field1(<span class="hljs-string">&quot;Test Field2&quot;</span>).field2(<span class="hljs-number">1000</span>).build());<br><br>        UserVo userVo = UserVo.builder()<br>                .id(<span class="hljs-number">1L</span>)<br>                .username(<span class="hljs-string">&quot;zhangsan&quot;</span>)<br>                .gender(<span class="hljs-number">2</span>)<br>                .password(<span class="hljs-string">&quot;abc123&quot;</span>)<br>                .createTime(<span class="hljs-string">&quot;2020-01-18 15:32:54&quot;</span>)<br>                .birthday(LocalDate.of(<span class="hljs-number">1999</span>, <span class="hljs-number">9</span>, <span class="hljs-number">27</span>))<br>                .config(configs)<br>                .build();<br><br>        User user = UserConverter.INSTANCE.toModel(userVo);<br><br>        System.out.println(userVo);<br>        System.out.println(user);<br><br><span class="hljs-comment">//        User(id=1, username=zhangsan, password=null, sex=2, birthday=1999-09-27, createTime=2020-01-18T15:32:54, config=[&#123;&quot;field1&quot;:&quot;Test Field1&quot;,&quot;field2&quot;:500&#125;,&#123;&quot;field1&quot;:&quot;Test Field2&quot;,&quot;field2&quot;:1000&#125;])</span><br><span class="hljs-comment">//        UserVo(id=1, username=zhangsan, password=abc123, gender=2, birthday=1999-09-27, createTime=2020-01-18 15:32:54, config=[UserVo.UserConfig(field1=Test Field1, field2=500), UserVo.UserConfig(field1=Test Field2, field2=1000)])</span><br><br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="5-常用注解总结"><a href="#5-常用注解总结" class="headerlink" title="5. 常用注解总结"></a>5. 常用注解总结</h3><h4 id="Mapper-componentModel-“spring”"><a href="#Mapper-componentModel-“spring”" class="headerlink" title="@Mapper(componentModel = “spring”)"></a>@Mapper(componentModel = “spring”)</h4><p> 该接口作为映射接口，编译时MapStruct处理器的入口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">...<br><span class="hljs-meta">@Autowired</span><br><span class="hljs-keyword">private</span> IConverter converter<br>...<br></code></pre></td></tr></table></figure><h4 id="Mappings"><a href="#Mappings" class="headerlink" title="@Mappings"></a>@Mappings</h4><p>一组映射关系，值为一个数组，元素为@Mapping</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mappings</span>&#123;<br>    <span class="hljs-meta">@Mapping(..)</span><br>    ..<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="Mapping"><a href="#Mapping" class="headerlink" title="@Mapping"></a>@Mapping</h4><p>一对映射关系 包含多个属性 支持多数据源进行映射</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapping(source=&quot;&quot;, target=&quot;&quot;)</span><br></code></pre></td></tr></table></figure><ul><li><p>source：源属性</p></li><li><p>target：目标属性</p></li><li><p>dateFormat：日期类型与String类型互转（支持Date、LocalDate、LocalDateTime）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapping(target = &quot;createTime&quot;, dateFormat = &quot;yyyy-MM-dd HH:mm:ss&quot;)</span><br></code></pre></td></tr></table></figure></li><li><p>numberFormat：数值类型与String类型之间的转化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapping(target = &quot;price&quot;, numberFormat = &quot;#.0&quot;)</span><br></code></pre></td></tr></table></figure></li><li><p>ignore：忽略某个属性的赋值</p></li><li><p>defaultValue：默认值</p></li></ul><h4 id="MappingTarget"><a href="#MappingTarget" class="headerlink" title="@MappingTarget"></a>@MappingTarget</h4><p>用在方法参数的前面。使用此注解，源对象同时也会作为目标对象，用于更新。</p><h4 id="InheritConfiguration"><a href="#InheritConfiguration" class="headerlink" title="@InheritConfiguration"></a>@InheritConfiguration</h4><p>继承同向映射 解决重复映射</p><h4 id="InheritInverseConfiguration"><a href="#InheritInverseConfiguration" class="headerlink" title="@InheritInverseConfiguration"></a>@InheritInverseConfiguration</h4><p>逆向继承映射 </p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title></title>
    <link href="/2021/06/05/WebMagic%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/06/05/WebMagic%E7%9A%84%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="WebMagic的简单使用"><a href="#WebMagic的简单使用" class="headerlink" title="WebMagic的简单使用"></a>WebMagic的简单使用</h1><h2 id="WebMagic介绍"><a href="#WebMagic介绍" class="headerlink" title="WebMagic介绍"></a>WebMagic介绍</h2><h3 id="1-1-WebMagic概览"><a href="#1-1-WebMagic概览" class="headerlink" title="1.1 WebMagic概览"></a>1.1 WebMagic概览</h3><p>[toc]WebMagic是一个简单灵活的Java爬虫框架。基于WebMagic，你可以快速开发出一个高效、易维护的爬虫。</p><p>WebMagic项目代码分为核心和扩展两部分。核心部分(webmagic-core)是一个精简的、模块化的爬虫实现，而扩展部分则包括一些便利的、实用性的功能。WebMagic的架构设计参照了Scrapy，目标是尽量的模块化，并体现爬虫的功能特点。</p><p>这部分提供非常简单、灵活的API，在基本不改变开发模式的情况下，编写一个爬虫。</p><p>扩展部分(webmagic-extension)提供一些便捷的功能，例如注解模式编写爬虫等。同时内置了一些常用的组件，便于爬虫开发。</p><h3 id="1-2-特性："><a href="#1-2-特性：" class="headerlink" title="1.2 特性："></a>1.2 特性：</h3><ul><li>简单的API，可快速上手</li><li>模块化的结构，可轻松扩展</li><li>提供多线程和分布式支持</li></ul><h3 id="1-3-总体架构"><a href="#1-3-总体架构" class="headerlink" title="1.3 总体架构"></a>1.3 总体架构</h3><p>WebMagic的结构分为<code>Downloader</code>、<code>PageProcessor</code>、<code>Scheduler</code>、<code>Pipeline</code>四大组件，并由Spider将它们彼此组织起来。这四大组件对应爬虫生命周期中的下载、处理、管理和持久化等功能。WebMagic的设计参考了Scapy，但是实现方式更Java化一些。</p><p>而Spider则将这几个组件组织起来，让它们可以互相交互，流程化的执行，可以认为Spider是一个大的容器，它也是WebMagic逻辑的核心。</p><p>一般情况下我们只需要实现<code>PageProcessor</code>接口，自定义我们的爬虫抽取逻辑即可。</p><h3 id="1-3-1-WebMagic的四个组件"><a href="#1-3-1-WebMagic的四个组件" class="headerlink" title="1.3.1 WebMagic的四个组件"></a>1.3.1 WebMagic的四个组件</h3><h4 id="1-Downloader"><a href="#1-Downloader" class="headerlink" title="1.Downloader"></a>1.Downloader</h4><p>Downloader负责从互联网上下载页面，以便后续处理。WebMagic默认使用了<a href="http://hc.apache.org/index.html">Apache HttpClient</a>作为下载工具。</p><h4 id="2-PageProcessor"><a href="#2-PageProcessor" class="headerlink" title="2.PageProcessor"></a>2.PageProcessor</h4><p>PageProcessor负责解析页面，抽取有用信息，以及发现新的链接。WebMagic使用<a href="http://jsoup.org/">Jsoup</a>作为HTML解析工具，并基于其开发了解析XPath的工具<a href="https://github.com/code4craft/xsoup">Xsoup</a>。</p><p>在这四个组件中，<code>PageProcessor</code>对于每个站点每个页面都不一样，是需要使用者定制的部分。</p><h4 id="3-Scheduler"><a href="#3-Scheduler" class="headerlink" title="3.Scheduler"></a>3.Scheduler</h4><p>Scheduler负责管理待抓取的URL，以及一些去重的工作。WebMagic默认提供了JDK的内存队列来管理URL，并用集合来进行去重。也支持使用Redis进行分布式管理。</p><p>除非项目有一些特殊的分布式需求，否则无需自己定制Scheduler。</p><h4 id="4-Pipeline"><a href="#4-Pipeline" class="headerlink" title="4.Pipeline"></a>4.Pipeline</h4><p>Pipeline负责抽取结果的处理，包括计算、持久化到文件、数据库等。WebMagic默认提供了“输出到控制台”和“保存到文件”两种结果处理方案。</p><p><code>Pipeline</code>定义了结果保存的方式，如果你要保存到指定数据库，则需要编写对应的Pipeline。对于一类需求一般只需编写一个<code>Pipeline</code>。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul><li>Github地址：<a href="https://github.com/code4craft/webmagic">https://github.com/code4craft/webmagic</a></li><li>中文文档：<a href="http://webmagic.io/docs/zh/">http://webmagic.io/docs/zh/</a></li></ul><h2 id="WebMagic的彼岸图网的DEMO"><a href="#WebMagic的彼岸图网的DEMO" class="headerlink" title="WebMagic的彼岸图网的DEMO"></a>WebMagic的彼岸图网的DEMO</h2><h3 id="一、打开爬取的页面进行分析"><a href="#一、打开爬取的页面进行分析" class="headerlink" title="一、打开爬取的页面进行分析"></a>一、打开爬取的页面进行分析</h3><h4 id="1-下载路径分析"><a href="#1-下载路径分析" class="headerlink" title="1.下载路径分析"></a>1.下载路径分析</h4><p>以此网址<a href="http://pic.netbian.com/">http://pic.netbian.com</a>为默认首页，打开页面如下所示：</p><p><img src="https://s2.loli.net/2021/12/25/HlItCZwQBRUW8Mp.png" alt="彼岸图网首页"></p><p>按<code>F12</code>打开如下页面 选中一张图片可以看到如下便签</p><p><img src="https://s2.loli.net/2021/12/25/GFCnrTftYoAyXLq.png"></p><p>我们可以看到很鲜明的标签规律  一个<code>&lt;li&gt;标签</code>是一张图片 每个里面包含一个<code>&lt;a&gt;标签</code>和一个<code>&lt;span&gt;标签</code>  <code>&lt;a&gt;标签</code>中的href属性为图片的详情地址后缀，将其拼接在首页的网址后面即可打开当前图片的详情页面</p><p><code>&lt;span&gt;标签</code>中的src属性的为当前图片的缩略图地址 我们暂不考虑 4K图片才是我们要的 :smile: </p><p>此页面没有4k图的下载地址 打开图片的详情页面 按下<code>F12</code> 选中下载原图 查看标签 如下</p><p><img src="https://s2.loli.net/2021/12/25/cTAbJPukp4tQNdF.png"></p><p>点击下载原图 可以看到需要登录才可以下载 所以后续编辑代码时需要在代码模拟请求中将<code>Cookie信息添加到请求头</code>中 </p><p>F12选中下载原图后可以看到这个<code>&lt;a&gt;</code>标签 <code>&lt;a href=&quot;javascript:;&quot; data-id=&quot;21617&quot;&gt;下载原图(4000x2357)&lt;/a&gt;</code> 暂时qq登录 进行一元的充值 获取长达7天的下载时间后 :mask:  我们可以看到点击下载原图就可以触发浏览器下载  在href属性中我们并没有看到对应的下载链接 打开<code>network</code>后可以看到</p><p><img src="https://s2.loli.net/2021/12/25/zSxgGuOw4XKakNo.png"></p><p>有两条请求记录存在  看请求名字可以推算到 是图片的下载请求 分别是<a href="http://pic.netbian.com/e/extend/downpic.php?id=21617&amp;t=0.7504811318948537">http://pic.netbian.com/e/extend/downpic.php?id=21617&amp;t=0.7504811318948537</a> 以及<a href="http://pic.netbian.com/downpic.php?id=21617&amp;classid=66">http://pic.netbian.com/downpic.php?id=21617&amp;classid=66</a></p><p>查看 第一条和第二条的响应头中的<code>Content-Type</code>可以看到</p><p><img src="https://s2.loli.net/2021/12/25/TFVSsMyHOGDudB8.png"></p><p><img src="https://s2.loli.net/2021/12/25/M8CObtXd4xJqnNZ.png"></p><p>第二个请求的响应头<code>content-Type</code>类型为<code>image/jpg</code> 因此第二条请求为真正的图片下载链接    </p><p>在查看第一条请求的<code>Response</code> 我们可以看到 </p><p><img src="https://s2.loli.net/2021/12/25/TRgJ8eDpWZC1E2d.png"></p><p>响应数据是第二条的请求的请求路径  也就是说我们需要请求第一条路径拿到返回的路径信息 再请求真正的图片下载路径  但是经测试发现第二条的请求路径格式固定 只有其中的参数<code>id</code>代表不同的图片 而且其中的第二个参数<code>classid</code> 完全不用传入 仍然可以进行下载。而参数<code>id</code>的值就是详情页的下载原图按钮中的的<code>&lt;a&gt;标签</code>中的<code>data-id属性的值</code> 如下</p><p><img src="https://s2.loli.net/2021/12/25/ajyu5NnGFMlHvJ3.png"></p><p>因此我们的最终下载链接即为<a href="http://pic.netbian.com/downpic.php?id=21617">http://pic.netbian.com/downpic.php?id=21617</a></p><p>我们的只需要通过爬虫获取<code>data-id</code>的值拼接到此路径中即可  <code>一定要模拟登录状态，即加入cookie信息,不然下载下来的照片大小为0 打开为损坏状态</code></p><h4 id="2-翻页分析"><a href="#2-翻页分析" class="headerlink" title="2.翻页分析"></a>2.翻页分析</h4><p>首页为<a href="http://pic.netbian.com/">http://pic.netbian.com</a></p><p>第二页为<a href="http://pic.netbian.com/index_2.html">http://pic.netbian.com/index_2.html</a></p><p>第三页为<a href="http://pic.netbian.com/index_3.html">http://pic.netbian.com/index_3.html</a></p><p>因此翻页的路径变化就是页码的变化 </p><p>因此编写爬虫逻辑的时候需要区分首页和之后的页面 对应不同的路径</p><h3 id="二、代码实现"><a href="#二、代码实现" class="headerlink" title="二、代码实现"></a>二、代码实现</h3><h4 id="1-创建枚举类SiteUrls"><a href="#1-创建枚举类SiteUrls" class="headerlink" title="1.创建枚举类SiteUrls"></a>1.创建枚举类<code>SiteUrls</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">enum</span> <span class="hljs-title">SiteUrls</span> </span>&#123;<br><br>    SITEURL(<span class="hljs-string">&quot;http://pic.netbian.com&quot;</span>), <span class="hljs-comment">// 首页网址前缀</span><br>    PAGEURLPREFIX(<span class="hljs-string">&quot;http://pic.netbian.com/4kdongman/index_&quot;</span>), <span class="hljs-comment">// 多页网址前缀(第一页、第二页等)</span><br>    DETAILPAGE(<span class="hljs-string">&quot;http://pic.netbian.com/tupian&quot;</span>), <span class="hljs-comment">// 当前图片详情页网址前缀</span><br>    DOWNURL(<span class="hljs-string">&quot;http://pic.netbian.com/downpic.php?id=&quot;</span>); <span class="hljs-comment">// 图片下载地址前缀</span><br><br>    <span class="hljs-keyword">private</span> String url;<br><br>    SiteUrls(String url) &#123;<br>        <span class="hljs-keyword">this</span>.url = url;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> String <span class="hljs-title">getUrl</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">this</span>.url;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-创建爬虫逻辑抽取类PicProcesso"><a href="#2-创建爬虫逻辑抽取类PicProcesso" class="headerlink" title="2.创建爬虫逻辑抽取类PicProcesso"></a>2.创建爬虫逻辑抽取类<code>PicProcesso</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">PicProcessor</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">PageProcessor</span> </span>&#123;<br><br>    <span class="hljs-keyword">private</span> Site site = Site.me().setRetryTimes(<span class="hljs-number">3</span>).setRetrySleepTime(<span class="hljs-number">1000</span>);<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-comment">// process是定制爬虫逻辑的核心接口，在这里编写抽取逻辑</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">process</span><span class="hljs-params">(Page page)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (page.getUrl().toString().startsWith(SiteUrls.DETAILPAGE.getUrl())) &#123; <span class="hljs-comment">// 详情页</span><br>            <span class="hljs-comment">// 通过css样式定位到具体所需要的信息标签 获取属性中的信息</span><br>            String picId = page.getHtml().css(<span class="hljs-string">&quot;div.downpic a&quot;</span>, <span class="hljs-string">&quot;data-id&quot;</span>).get();<br>            <span class="hljs-comment">// 调用下载方法 传入下载路径</span><br>            DownloadUtil.downloadPic(SiteUrls.DOWNURL.getUrl() + picId, picId);<br>        &#125; <span class="hljs-keyword">else</span> &#123;  <span class="hljs-comment">// 表示列表页</span><br>            <span class="hljs-comment">// 拿到一个列表页中多个图片的不同图片详情网址列表</span><br>            List&lt;String&gt; hrefs = page.getHtml().css(<span class="hljs-string">&quot;ul.clearfix&gt;li&gt;a&quot;</span>, <span class="hljs-string">&quot;href&quot;</span>).all();<br>            <span class="hljs-keyword">for</span> (String href : hrefs) &#123;<br>                <span class="hljs-comment">// 加入任务队列</span><br>                page.addTargetRequest(href);<br>            &#125;<br>            <span class="hljs-comment">// 获取当前列表url 进行字符串切割 获取当前页码</span><br>            String url = page.getUrl().get();<br>            String s = StringUtils.substringAfter(url,<span class="hljs-string">&quot;_&quot;</span>);<br>            String i = StringUtils.substringBefore(s, <span class="hljs-string">&quot;.&quot;</span>);<br>            <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;&quot;</span>.equals(i)) &#123;<br>                <span class="hljs-comment">// 为空表示当前页为首页 进行第二页跳转</span><br>                i = <span class="hljs-string">&quot;2&quot;</span>;<br>            &#125;<span class="hljs-keyword">else</span> &#123;<br>                <span class="hljs-comment">// 页码加1</span><br>                i = (Integer.parseInt(i)+<span class="hljs-number">1</span>)+<span class="hljs-string">&quot;&quot;</span>;<br>            &#125;<br>            <span class="hljs-comment">// 将下一页列表页加入到任务队列</span><br>            page.addTargetRequest(SiteUrls.PAGEURLPREFIX.getUrl() + i + <span class="hljs-string">&quot;.html&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> Site <span class="hljs-title">getSite</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">return</span> site;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="3-创建图片下载工具类DownloadUtil"><a href="#3-创建图片下载工具类DownloadUtil" class="headerlink" title="3.创建图片下载工具类DownloadUtil"></a>3.创建图片下载工具类<code>DownloadUtil</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">DownloadUtil</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">downloadPic</span><span class="hljs-params">(String url, String picId)</span> </span>&#123;<br>            FileOutputStream stream = <span class="hljs-keyword">null</span>;<br>        <span class="hljs-keyword">try</span> &#123;<br>            RestTemplate template = <span class="hljs-keyword">new</span> RestTemplate();<br>            <span class="hljs-comment">// 设置请求头信息 cookie和referer</span><br>            HttpHeaders headers = <span class="hljs-keyword">new</span> HttpHeaders();<br>            headers.add(<span class="hljs-string">&quot;Cookie&quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<br>            headers.add(<span class="hljs-string">&quot;User-Agent&quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<br>            headers.add(<span class="hljs-string">&quot;Referer&quot;</span>,<span class="hljs-string">&quot;&quot;</span>);<br>            HttpEntity&lt;String&gt; httpEntity = <span class="hljs-keyword">new</span> HttpEntity&lt;String&gt;(<span class="hljs-keyword">null</span>, headers);<br>            ResponseEntity&lt;<span class="hljs-keyword">byte</span>[]&gt; entity = template.exchange(url, HttpMethod.GET, httpEntity, <span class="hljs-keyword">byte</span>[].class);<br>            <span class="hljs-comment">// 获取图片信息</span><br>            <span class="hljs-keyword">byte</span>[] picData = entity.getBody();<br>            <span class="hljs-comment">// 设置图片下载路径</span><br>            stream = <span class="hljs-keyword">new</span> FileOutputStream(<span class="hljs-keyword">new</span> File(<span class="hljs-string">&quot;C:\\Users\\Dell\\Desktop\\图片\\&quot;</span>+picId+<span class="hljs-string">&quot;.jpg&quot;</span>));<br>            <span class="hljs-comment">// 信息写入文件</span><br>            stream.write(picData);<br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                e.printStackTrace();<br>                System.out.println(<span class="hljs-string">&quot;图片下载失败&quot;</span>);<br>            &#125;<span class="hljs-keyword">finally</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                stream.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>                e.printStackTrace();<br>            &#125;<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p><code>下载类的9、10、11空的信息请自行填写，如有帮助或者需要超级会员无限下载的账号信息请联系我</code></p><h4 id="4-代码启动入口类Run"><a href="#4-代码启动入口类Run" class="headerlink" title="4.代码启动入口类Run"></a>4.代码启动入口类<code>Run</code></h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Run</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br><span class="hljs-comment">// 通过抽取逻辑对象创建自定义爬虫对象 添加首页网址以及设置爬取的线程数量 默认5个  </span><br>        Spider.create(<span class="hljs-keyword">new</span> PicProcessor()).addUrl(SiteUrls.SITEURL.getUrl())<br>                .thread(<span class="hljs-number">5</span>).run();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><code>此文章仅供学习参考，如有问题，欢迎下方评论谢谢！！！</code></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
